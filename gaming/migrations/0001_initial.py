# Generated by Django 5.1.7 on 2025-03-31 01:29

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Game",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        max_length=50,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=200, unique=True)),
                ("description", models.TextField()),
                ("long_description", models.TextField(blank=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="game_images/"),
                ),
                ("file_name", models.CharField(blank=True, max_length=255, null=True)),
                ("dependencies", models.JSONField(blank=True, null=True)),
                ("players", models.PositiveIntegerField(default=0)),
                ("rating", models.FloatField(default=0.0)),
                ("play_to_earn", models.BooleanField(default=True)),
                (
                    "blockchain_name",
                    models.CharField(default="NetWork", max_length=100),
                ),
                ("token_name", models.CharField(default="NET", max_length=50)),
                ("nft_enabled", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-players"],
            },
        ),
        migrations.CreateModel(
            name="GameCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Game Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Achievement",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "icon",
                    models.ImageField(
                        blank=True, null=True, upload_to="achievement_icons/"
                    ),
                ),
                ("points", models.PositiveIntegerField(default=10)),
                (
                    "reward_amount",
                    models.DecimalField(decimal_places=8, default=0, max_digits=20),
                ),
                ("reward_token", models.CharField(default="NET", max_length=10)),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="achievements",
                        to="gaming.game",
                    ),
                ),
            ],
            options={
                "ordering": ["game", "name"],
            },
        ),
        migrations.AddField(
            model_name="game",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="games",
                to="gaming.gamecategory",
            ),
        ),
        migrations.CreateModel(
            name="GamePlay",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("duration", models.DurationField(blank=True, null=True)),
                ("score", models.PositiveIntegerField(default=0)),
                (
                    "earned_tokens",
                    models.DecimalField(decimal_places=8, default=0, max_digits=20),
                ),
                ("token_type", models.CharField(default="NET", max_length=10)),
                ("completed_objectives", models.PositiveIntegerField(default=0)),
                ("achievements_unlocked", models.JSONField(blank=True, null=True)),
                ("session_id", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("verified", models.BooleanField(default=False)),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="plays",
                        to="gaming.game",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="game_plays",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-start_time"],
            },
        ),
        migrations.CreateModel(
            name="GameTransaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("earning", "Earning"),
                            ("purchase", "Purchase"),
                            ("sale", "Sale"),
                            ("swap", "Swap"),
                            ("transfer", "Transfer"),
                        ],
                        max_length=20,
                    ),
                ),
                ("token", models.CharField(max_length=10)),
                ("amount", models.DecimalField(decimal_places=8, max_digits=20)),
                ("token2", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "amount2",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=20, null=True
                    ),
                ),
                ("description", models.CharField(blank=True, max_length=255)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("tx_hash", models.CharField(blank=True, max_length=100, null=True)),
                ("blockchain_verified", models.BooleanField(default=False)),
                (
                    "game",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="gaming.game",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="game_transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="Leaderboard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "period",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("all_time", "All Time"),
                        ],
                        default="weekly",
                        max_length=20,
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="leaderboards",
                        to="gaming.game",
                    ),
                ),
            ],
            options={
                "unique_together": {("game", "period")},
            },
        ),
        migrations.CreateModel(
            name="NFT",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="nft_images/"),
                ),
                (
                    "rarity",
                    models.CharField(
                        choices=[
                            ("common", "Common"),
                            ("uncommon", "Uncommon"),
                            ("rare", "Rare"),
                            ("epic", "Epic"),
                            ("legendary", "Legendary"),
                        ],
                        default="common",
                        max_length=20,
                    ),
                ),
                ("type", models.CharField(blank=True, max_length=100)),
                ("token_id", models.CharField(blank=True, max_length=100)),
                ("contract_address", models.CharField(blank=True, max_length=100)),
                ("blockchain", models.CharField(default="NetWork", max_length=100)),
                ("attributes", models.JSONField(blank=True, null=True)),
                (
                    "last_price",
                    models.DecimalField(decimal_places=2, default=0, max_digits=20),
                ),
                ("acquired_at", models.DateTimeField(auto_now_add=True)),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nfts",
                        to="gaming.game",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nfts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "NFT",
                "verbose_name_plural": "NFTs",
                "ordering": ["-acquired_at"],
            },
        ),
        migrations.CreateModel(
            name="GameToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("symbol", models.CharField(max_length=10)),
                ("contract_address", models.CharField(blank=True, max_length=100)),
                ("decimals", models.PositiveSmallIntegerField(default=18)),
                (
                    "total_supply",
                    models.DecimalField(decimal_places=0, default=0, max_digits=30),
                ),
                (
                    "circulating_supply",
                    models.DecimalField(decimal_places=0, default=0, max_digits=30),
                ),
                (
                    "current_price",
                    models.DecimalField(decimal_places=8, default=0, max_digits=20),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tokens",
                        to="gaming.game",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "unique_together": {("game", "symbol")},
            },
        ),
        migrations.CreateModel(
            name="LeaderboardEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rank", models.PositiveIntegerField()),
                ("score", models.PositiveIntegerField(default=0)),
                (
                    "earnings",
                    models.DecimalField(decimal_places=8, default=0, max_digits=20),
                ),
                (
                    "wallet_address",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "leaderboard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="entries",
                        to="gaming.leaderboard",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="leaderboard_entries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["rank"],
                "unique_together": {("leaderboard", "user")},
            },
        ),
        migrations.CreateModel(
            name="UserAchievement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("unlocked_at", models.DateTimeField(auto_now_add=True)),
                ("tx_hash", models.CharField(blank=True, max_length=100, null=True)),
                ("blockchain_verified", models.BooleanField(default=False)),
                (
                    "achievement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="earned_by",
                        to="gaming.achievement",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="achievements",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-unlocked_at"],
                "unique_together": {("user", "achievement")},
            },
        ),
        migrations.CreateModel(
            name="UserGameWallet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("token_balances", models.JSONField(default=dict)),
                (
                    "main_wallet_address",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "game",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_wallets",
                        to="gaming.game",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="game_wallets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "game")},
            },
        ),
    ]
